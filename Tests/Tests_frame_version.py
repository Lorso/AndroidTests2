#–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ë–î
# def insert(id, ntest, dt, s, ipaddress, timeitog):
#     client.execute('INSERT INTO devdb1.site_test (id, ntest, dt, sitename, ipaddress, average) VALUES',
#                     [{'id': id, 'ntest': ntest, 'dt': dt, 'sitename': s, 'ipaddress': ipaddress, 'average': round(timeitog, 2)}])

def AutoTest(ser, mac, devices_name, ssid, name_video):
    import uiautomator2 as u2
    from time import sleep
    from time import time
    from datetime import datetime
    import requests
    from Functions.Yandex import sendYandexScreencast
    import Functions.CheckInternet
    from Functions.ClearCookie import XiaomiCl
    from Functions.DataName import NowDate
    from Functions.TelegramApi import SendMessage
    from Functions.TelegramApi import Send_screencast
    from Functions.LockDisplay import Lock
    from Functions.Sumsung import Connect_WiFi
    from Functions.pgconnect import addResult
    from clickhouse_driver import Client



    time_start = time()

    # –ë–î
    client = Client(host='10.1.240.77', port="9000")

    global id
    # id = 6  # Xiaomi 10t pro
    id = 5  # Xiaomi SE9
    #id = 4 # Oneplus 9R
    #id = 3 #Xiaomi 9 pro

    LV = str(client.execute('SELECT LAST_VALUE(ntest) FROM devdb1.auto_tests'))
    global ntest
    ntest = int((LV.partition('(')[2]).partition(',')[0]) + 1
    global dt
    dt = datetime.now().replace(microsecond=0)
    global link_video
    link_video = 'tg'
    err_flags = 0

    d = u2.connect_usb(ser)
    flag = 6
    flag2 = 15
    err400 = False
    check_err = 0
    global err_name
    err_name = ''
    #imTestX = "ScreeX.jpg"

    with open("logs/buttonClick.txt", 'a', encoding='utf-8') as f:
        try:
            print(f"{NowDate()}  {devices_name}: üì£ {ssid}:  –¢–µ—Å—Ç –∑–∞–ø—É—â–µ–Ωüì±")
            f.write(f"{NowDate()}  {devices_name}: üì£ {ssid}:  –¢–µ—Å—Ç –∑–∞–ø—É—â–µ–ΩüöÄ\n")

            if d.info.get('screenOn'):
                d.shell('input keyevent 26')  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∞. –ï—Å–ª–∏ –≤–∫–ª, —Ç–æ –≤—ã–∫–ª –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ç–µ—Å—Ç–∞
            Lock(d)  # –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —ç–∫—Ä–∞–Ω–∞

            # –£–±–µ—Ä–µ—Ç –≤—Å–ø–ª—ã–≤–∞—à–∫—É –æ—Ç USB –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
            if d(resourceId="miui:id/alertTitle").exists:
                d.click(0.488, 0.902)

            if devices_name == "Samsung A32":
                Connect_WiFi(d)
            else:
                d.shell("am start -n com.android.settings/com.android.settings.wifi.WifiSettings")  # –ü–µ—Ä–µ—Ö–æ–¥ –≤ –Ω–∞—Å—Ç—Ä
                wifi = d(text='Wi-Fi', className='android.widget.TextView')
                wifi.click_exists(3)

            d.shell('svc wifi enable')  # –í–∫–ª—é—á–µ–Ω–∏–µ Wi-Fi
            d.screenrecord(f"screencasts/{devices_name}_{name_video}.mp4")  # –ó–∞–ø—É—Å–∫ –∑–∞–ø–∏—Å–∏ —ç–∫—Ä–∞–Ω–∞

            # -- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SSID
            if devices_name == "Samsung A32":
                ssid_name = d(resourceId="com.android.settings:id/title", text=f"{ssid}")
                ssid_name.wait(True, 60)
                if ssid_name.exists:
                    ssid_name.click_gone(5, 5)
                    sleep(6)
                else:
                    ssid_name.click_gone(5, 5)
                    sleep(6)
            if devices_name == 'OnePlus 9R':
                d.shell('svc wifi enable')
                sleep(5)
                d.shell("am start -n com.steinwurf.adbjoinwifi/.MainActivity -e ssid '" + ssid + "'")
                sleep(10)
                d.app_start("com.android.settings", ".Settings$WifiSettings2Activity")
                sleep(5)
                if d(description="–ù–∞—Å—Ç—Ä–æ–π–∫–∏").exists(timeout=6):
                    d(description="–ù–∞—Å—Ç—Ä–æ–π–∫–∏").click()
                    sleep(3)
                    if d(resourceId="android:id/title", text="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ").exists():
                        d(resourceId="android:id/title", text="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ").click()
                    sleep(3)
                    if d(resourceId="android:id/title", text="–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å").exists():
                        d(resourceId="android:id/title", text="–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å").click()
                    sleep(3)
                    if d(resourceId="android:id/text1", text="MAC-–∞–¥—Ä–µ—Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞").exists():
                        d(resourceId="android:id/text1", text="MAC-–∞–¥—Ä–µ—Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞").click()
                    if d(text="–í–æ–π—Ç–∏").exists():
                        d(resourceId="com.android.settings:id/button2").click()
                if d(resourceId="android:id/title", text="–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å").exists():

                    d(resourceId="android:id/title", text="–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å").click()
                    sleep(3)
                    if d(resourceId="android:id/text1", text="MAC-–∞–¥—Ä–µ—Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞").exists():
                        d(resourceId="android:id/text1", text="MAC-–∞–¥—Ä–µ—Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞").click()
                    if d(text="–í–æ–π—Ç–∏").exists():
                        d(resourceId="com.android.settings:id/button2").click()
            else:
                if d(resourceId="miui:id/buttonPanel").exists:
                    d(resourceId="miui:id/buttonPanel").click_gone()
                ssid_name = d(text=f'{ssid}', className='android.widget.CheckedTextView')
                if ssid == 'sas': # –¥–ª—è –æ—Å–æ–±–µ–Ω–Ω–æ–≥–æ —Å–∏–¥–∞
                    # d.shell("am start -n com.steinwurf.adbjoinwifi/.MainActivity -e ssid '" + ssid + "'")
                    # sleep(10)
                    # d.app_start("com.android.settings", ".Settings$WifiSettings2Activity")
                    # sleep(5)
                    # d(resourceId="com.android.systemui:id/halo").click()
                    # sleep(2)
                    # d(resourceId="com.miui.home:id/icon_icon", description="–ù–∞—Å—Ç—Ä–æ–π–∫–∏").click()
                    # sleep(2)
                    # d.xpath(
                    #     '//*[@resource-id="android:id/list"]/android.widget.LinearLayout[5]/android.widget.RelativeLayout[1]').click()
                    # if ssid_name.exists:
                    #     ssid_name.click_gone(5, 5)
                    # sleep(8)
                    ssid_name.wait(True, 40)
                    if ssid_name.exists:
                        ssid_name.click_gone(5, 5)
                        sleep(8)
                    else:
                        d.shell('svc wifi disable')
                        sleep(2)
                        d.shell('svc wifi enable')
                        ssid_name.wait(True, 20)
                        ssid_name.click_gone(5, 5)
                        sleep(8)
                else:
                    ssid_name.wait(True, 20)
                    if ssid_name.exists:
                        ssid_name.click_gone(5, 5)
                        sleep(10)
                    else:
                        # d(scrollable=True).scroll.to(text=f"{ssid}")
                        d(scrollable=True).scroll.vert.forward(steps=200) # —Å–∫—Ä–æ–ª–ª –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–∏–¥–∞
                        ssid_name.click_gone(5, 5)
                        sleep(10)
                        if not ssid_name.exists:
                            d(text="–û–±–Ω–æ–≤–∏—Ç—å").click()
                            sleep(10)
                            if ssid_name.exists:
                                ssid_name.click_gone(5, 5)
                                sleep(10)
                            elif not ssid_name.exists:
                                # d(scrollable=True).scroll.to(text=f"{ssid}")
                                d(scrollable=True).scroll.vert.backward(steps=200)  # —Å–∫—Ä–æ–ª–ª –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–∏–¥–∞
                                ssid_name.click_gone(5, 5)
                                sleep(10)
                            else:
                                if d(resourceId="android:id/widget_frame").exists:
                                    d(resourceId="android:id/widget_frame").click()
                                    sleep(2)
                                    d(resourceId="android:id/checkbox").click()
                                    if ssid_name.exists:
                                        ssid_name.click_gone(5, 5)
                                        sleep(10)
                        #if not ssid_name.exists:
                            # d.shell("am start -n com.steinwurf.adbjoinwifi/.MainActivity -e ssid '" + ssid + "'")
                            # sleep(10)
                            # d.app_start("com.android.settings", ".Settings$WifiSettings2Activity")
                            # sleep(5)
                            # d(resourceId="com.android.systemui:id/halo").click()
                            # sleep(2)
                            # d(resourceId="com.miui.home:id/icon_icon", description="–ù–∞—Å—Ç—Ä–æ–π–∫–∏").click()
                            # sleep(2)
                            # d.xpath(
                            #     '//*[@resource-id="android:id/list"]/android.widget.LinearLayout[5]/android.widget.RelativeLayout[1]').click()
                            # if ssid_name.exists:
                            #     ssid_name.click_gone(5, 5)
                            # sleep(8)


            # -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ —É–±–∏—Ç–æ–π —Å–µ—Å—Å–∏–∏
            if devices_name == 'OnePlus 9R':
                check_connect = d(text="–ü–æ–¥–∫–ª—é—á–µ–Ω–æ")
            else:
                check_connect = d.xpath('//*[@text="–ü–æ–¥–∫–ª—é—á–µ–Ω–æ"]')
            if check_connect.exists and ssid != "_P_ttk_hospitals":
                if Functions.CheckInternet.CheckInternet(d, devices_name):
                    print("\033[31m{}\033[0m".format(f"{NowDate()}  –ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞.–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω."))
                    f.write(f"{NowDate()}  –ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞.–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.\n")
                    SendMessage(f"{devices_name}: ‚õî {ssid}: –°–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞")
                    check_err = 1
                    err_name = 'Error: No kill session'



                    # result 0 - —É—Å–ø–µ—à–Ω–æ \ 1 - –æ—à–∏–±–∫–∞ \ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞
                    # err 0 - –Ω–µ –±–∞–≥ \ 900 - –æ—à–∏–±–∫–∞ 900 \ 100 - –æ—à–∏–±–∫–∞ 100\
                    # addResult(ssid, devices_name, 2, "Active session", f"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4")
                    return False
                else:
                    print("\033[31m{}\033[0m".format(f"{NowDate()}  –ö–µ–ø—Ç–∏–≤ –Ω–µ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª.–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω."))
                    f.write(f"{NowDate()}  –ö–µ–ø—Ç–∏–≤ –Ω–µ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª.–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.\n")
                    SendMessage(f"{devices_name}: üî• {ssid}: –¢–µ—Å—Ç —É–ø–∞–ª")
                    check_err = 1
                    err_name = 'Error: No Captive'
                    # result 0 - —É—Å–ø–µ—à–Ω–æ \ 1 - –æ—à–∏–±–∫–∞ \ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞
                    # addResult(ssid, devices_name, 1, "Captive not found", f"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4")
                    return False


            # -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∑–ª—ë—Ç–∞ –∫–µ–ø—Ç–∏–≤–∞
            if devices_name == "Samsung A32":
                captive = d.xpath('//*[@resource-id="android:id/action_bar"]/android.widget.LinearLayout[1]')
            if devices_name == 'OnePlus 9R':
                captive = d.xpath('//*[@content-desc="–ï—â—ë"]')
            else:
                captive = d(text="–ü–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")

            captive.wait(True, 60)
            if captive.exists:
                print(f"{NowDate()}  SSID –Ω–∞–π–¥–µ–Ω.–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞—á–∞–ª–∞—Å—å")
                f.write(f"{NowDate()}  SSID –Ω–∞–π–¥–µ–Ω.–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞—á–∞–ª–∞—Å—å\n")
                print(f"{NowDate()}  –ö–µ–ø—Ç–∏–≤ –æ—Ç–∫—Ä—ã–ª—Å—è")
                f.write(f"{NowDate()}  –ö–µ–ø—Ç–∏–≤ –æ—Ç–∫—Ä—ã–ª—Å—è\n")
            elif not ssid_name.exists:
                print("\033[31m{}\033[0m".format(f"{NowDate()}  SSID –Ω–µ –Ω–∞–π–¥–µ–Ω.–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω."))
                f.write(f"{NowDate()}  SSID –Ω–µ –Ω–∞–π–¥–µ–Ω.–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.\n")
                SendMessage(f"{devices_name}: ‚õî {ssid}: SSID –Ω–µ –Ω–∞–π–¥–µ–Ω")
                check_err = 1
                err_name = 'Error: No SSID'
                # result 0 - —É—Å–ø–µ—à–Ω–æ \ 1 - –æ—à–∏–±–∫–∞ \ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞
                # addResult(ssid, devices_name, 3, "SSID not found", f"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4")
                return False
            else:
                print("\033[31m{}\033[0m".format(f"{NowDate()}  –ö–µ–ø—Ç–∏–≤ –Ω–µ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª.–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω."))
                f.write(f"{NowDate()}  –ö–µ–ø—Ç–∏–≤ –Ω–µ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª.–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.\n")
                SendMessage(f"{devices_name}: üî• {ssid}: –¢–µ—Å—Ç —É–ø–∞–ª")
                check_err = 1
                err_name = 'Error: Unknown'
                # result 0 - —É—Å–ø–µ—à–Ω–æ \ 1 - –æ—à–∏–±–∫–∞ \ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞
                # addResult(ssid, devices_name, 1, "Captive not found", f"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4")
                return False

                # -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ —É–±–∏—Ç–æ–π —Å–µ—Å—Å–∏–∏ 2
                if Functions.CheckInternet.CheckInternet(d, devices_name):

                    print("\033[31m{}\033[0m".format(f"{NowDate()}  –ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞.–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω."))
                    f.write(f"{NowDate()}  –ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞.–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.\n")
                    SendMessage(f"{devices_name}: ‚õî {ssid}: –°–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞")
                    check_err = 1
                    err_name = 'Error: No kill session'
                    # result 0 - —É—Å–ø–µ—à–Ω–æ \ 1 - –æ—à–∏–±–∫–∞ \ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞
                    # addResult(ssid, devices_name, 2, "Active session", f"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4")
                else:
                    print("\033[31m{}\033[0m".format(f"{NowDate()}  –ö–µ–ø—Ç–∏–≤ –Ω–µ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª.–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω."))
                    f.write(f"{NowDate()}  –ö–µ–ø—Ç–∏–≤ –Ω–µ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª.–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.\n")
                    SendMessage(f"{devices_name}: üî• {ssid}: –¢–µ—Å—Ç —É–ø–∞–ª")
                    check_err = 1
                    err_name = 'Error: No Captive'
                    # result 0 - —É—Å–ø–µ—à–Ω–æ \ 1 - –æ—à–∏–±–∫–∞ \ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞
                    # addResult(ssid, devices_name, 1, "Captive not found", f"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4")
                return False

            # -- –ß–µ–∫–µ—Ä –æ—à–∏–±–∫–∏ 400
            if d(text="Error 400: Bad Request").exists:
                print("\033[31m{}\033[0m".format(f"{NowDate()}  Error 400: Bad Request"))
                f.write(f"{NowDate()}  Error 400: Bad Request\n")
                SendMessage(f"{devices_name}: üî• {ssid}: Error 400: Bad Request")
                err_name = 'Error: 400 Bad Request'
                err400 = True
                check_err = 1
                # result 0 - —É—Å–ø–µ—à–Ω–æ \ 1 - –æ—à–∏–±–∫–∞ \ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞
                # addResult(ssid, devices_name, 1, "err400", f"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4")
                return False

            # -- –ß–µ–∫–µ—Ä –∑–∞–≥–ª—É—à–∫–∏
            check_random = d.xpath('//*[@resource-id="changeSettings"]')
            if check_random.exists:
                print("\033[31m{}\033[0m".format(f"{NowDate()} –ù–∞–π–¥–µ–Ω–∞ –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –º–∞—Å"))
                f.write(f"{NowDate()}  –ù–∞–π–¥–µ–Ω–∞ –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –º–∞—Å\n")
                SendMessage(f"{devices_name}: üî• {ssid}: –ù–∞–π–¥–µ–Ω–∞ –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –º–∞—Å")
                check_err = 1
                err_name = 'Error: Unknown'
                # result 0 - —É—Å–ø–µ—à–Ω–æ \ 1 - –æ—à–∏–±–∫–∞ \ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞
                # addResult(ssid, devices_name, 1, "random mac", f"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4")
                return False

            #–û—à–∏–±–∫–∏
            err900 = d.xpath('//*[@text="–û—à–∏–±–∫–∞ #900"]')
            err100 = d.xpath('//*[@text="–û—à–∏–±–∫–∞ #100"]')
            err304 = d.xpath('//*[.="–û—à–∏–±–∫–∞ #304"]')
            # -- –ù–∞–∂–∞—Ç–∏–µ –Ω–∞ "–í–æ–π—Ç–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç"

            open_sixty_min = d.xpath('//*[@text="–í–æ–π—Ç–∏ –≤ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç" or @text="–í–æ–π—Ç–∏ –Ω–∞ 60 –º–∏–Ω—É—Ç" or @text="Internetga kirish"]')
            open_sixty_min.wait(60)
            while flag != 0:
                if open_sixty_min.exists:
                    # –∫–Ω–æ–ø–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–∏ 5 —Å–µ–∫. –ù—É–∂–µ–Ω –∫–ª–∏–∫–∞–±–ª–µ
                    open_sixty_min.click_exists(20)
                    print(f"{NowDate()}  –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ '–í–æ–π—Ç–∏ –≤ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç'")
                    f.write(f"{NowDate()}  –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ '–í–æ–π—Ç–∏ –≤ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç'\n")
                    time_start_avtoriz = time()
                    flag -= 1
                    break
                if err100.exists:
                    print("\033[31m{}\033[0m".format(f"{NowDate()} –û—à–∏–±–∫–∞ 100.–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω"))
                    f.write(f"{NowDate()} –û—à–∏–±–∫–∞ 100.–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω\n")
                    SendMessage(f"{devices_name}: üî• {ssid}: –û—à–∏–±–∫–∞ 100")
                    check_err = 1
                    err_name = 'Error: 100'
                    return False
                if err304.exists:
                    print("\033[31m{}\033[0m".format(f"{NowDate()} –û—à–∏–±–∫–∞ 304.–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω"))
                    f.write(f"{NowDate()} –û—à–∏–±–∫–∞ 304.–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω\n")
                    SendMessage(f"{devices_name}: üî• {ssid}: –û—à–∏–±–∫–∞ 304")
                    check_err = 1
                    err_name = 'Error: 304'
                if flag == 1:
                    print("\033[31m{}\033[0m".format(f"{NowDate()}  –ö–Ω–æ–ø–∫–∞ '–í–æ–π—Ç–∏ –≤ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω "))
                    f.write(f"{NowDate()}  –ö–Ω–æ–ø–∫–∞ '–í–æ–π—Ç–∏ –≤ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω \n")
                    SendMessage(f"{devices_name}: üî• {ssid}: –ö–Ω–æ–ø–∫–∞ '–í–æ–π—Ç–∏ –≤ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")
                    check_err = 1
                    err_name = 'Error: Unknown'
                    # result 0 - —É—Å–ø–µ—à–Ω–æ \ 1 - –æ—à–∏–±–∫–∞ \ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞
                    # addResult(ssid, devices_name, 1, "button Connect not found", f"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4")
                    return False
                else:
                    flag -= 1
                    sleep(3)
                    continue

            # -- –ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º—ã
            button_x1 = d.xpath(
                '//*[@text="–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Wi-Fi"]/android.view.View[2]/android.view.View[1]/android.view.View[3]/android.view.View[1]')
            button_x2 = d.xpath(
                '//*[@text="–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Wi-Fi"]/android.view.View[2]/android.view.View[1]/android.view.View[1]')
            # button_x2 = d.xpath('//*/android.view.View[1]/android.view.View[2]/android.view.View[1]/android.view.View[1]')
            button_x3 = d.xpath('//*[@text="Wi-Fi.ru"]/android.view.View[3]/android.view.View[1]')

            errWebStr = d.xpath('//*[@text="–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—É"]')
            button_continue = d.xpath('//*[@text="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å" or @text="–î–∞–ª–µ–µ"]')

            # –ù–∞–∑–Ω–∞—á–µ–Ω–∏—è —á–µ–∫–µ—Ä–æ–≤ –¥–ª—è —Å–µ–≥–º–µ–Ω—Ç–æ–≤


            if 'dit' in ssid or ssid == '_P_ttk_hospitals' or ssid == '_P_dit_almatel':
                if ssid == '_P_ttk_hospitals':
                    final_check = d.xpath('//*[@text="mos.ru ‚Äì –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –ú—ç—Ä–∞ –ú–æ—Å–∫–≤—ã"]')
                    final_check2 = d.xpath('//*[@text="mos.ru ‚Äì –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –ú—ç—Ä–∞ –ú–æ—Å–∫–≤—ã"]')
                elif ssid == '_P_dit_almatel':
                    final_check = d.xpath('//*[@content-desc="–û–¢–ö–†–´–¢–¨ –°–ê–ô–¢ –¢–ï–ê–¢–†–ê"]')
                    final_check2 = d.xpath('//*[@content-desc="–û–¢–ö–†–´–¢–¨ –°–ê–ô–¢ –¢–ï–ê–¢–†–ê"]')
                else:
                    final_check = d.xpath('//*[@text="mos.ru"]')
                    final_check2 = d.xpath('//*[@text="mos.ru"]')

            elif ssid == '_P_Sola_MT_507':
                final_check = d.xpath('//*[@content-desc="Logo"]')
                final_check2 = d.xpath('//*[@content-desc="Logo"]')
            else:
                final_check2 = d.xpath('//*[@text="Ó†ö"]')
                final_check = d.xpath('//*[@content-desc="cabinet.wi-fi"]')

            # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
            while not (final_check.exists or final_check2.exists or ssid_name.exists):
                sleep(5)
                if err900.exists:
                    print("\033[31m{}\033[0m".format(f"{NowDate()} –û—à–∏–±–∫–∞ 900.–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω"))
                    f.write(f"{NowDate()} –û—à–∏–±–∫–∞ 900.–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω\n")
                    SendMessage(f"{devices_name}: üî• {ssid}: –û—à–∏–±–∫–∞ 900")
                    err_name = 'Error: 900'
                    check_err = 1
                    # result 0 - —É—Å–ø–µ—à–Ω–æ \ 1 - –æ—à–∏–±–∫–∞ \ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞
                    # addResult(ssid, devices_name, 1, "Error900", f"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4")
                    return False
                elif errWebStr.exists:
                    print("\033[31m{}\033[0m".format(f"{NowDate()} –û—à–∏–±–∫–∞ –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—É ERR_TIMED_OUT.–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω"))
                    f.write(f"{NowDate()} –û—à–∏–±–∫–∞ –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—É ERR_TIMED_OUT.–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω\n")
                    SendMessage(f"{devices_name}: üî• {ssid}: –û—à–∏–±–∫–∞ –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—É ERR_TIMED_OUT")
                    check_err = 1
                    err_name = 'Error: –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—É ERR_TIMED_OUT'
                    # result 0 - —É—Å–ø–µ—à–Ω–æ \ 1 - –æ—à–∏–±–∫–∞ \ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞
                    # addResult(ssid, devices_name, 1, "err - web page not be opened",
                    #          f"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4")
                    return False
                elif err100.exists:
                    print("\033[31m{}\033[0m".format(f"{NowDate()} –û—à–∏–±–∫–∞ 100.–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω"))
                    f.write(f"{NowDate()} –û—à–∏–±–∫–∞ 100.–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω\n")
                    SendMessage(f"{devices_name}: üî• {ssid}: –û—à–∏–±–∫–∞ 100")
                    check_err = 1
                    err_name = 'Error: 100'
                    # result 0 - —É—Å–ø–µ—à–Ω–æ \ 1 - –æ—à–∏–±–∫–∞ \ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞
                    # addResult(ssid, devices_name, 1, "Error100", f"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4")
                    return False
                elif button_continue.exists:
                    button_continue.click(1)
                    print(f"{NowDate()}  –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å/–î–∞–ª–µ–µ")
                    f.write(f"{NowDate()}  –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å/–î–∞–ª–µ–µ\n")
                    sleep(6)
                # elif d.image.match(imTestX):
                #     d.image.click(imTestX, timeout=1.0)
                #     flag2 -= 1
                #     print(f"{NowDate()}  –ù–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç–∏–∫ –≤–∏–¥ ‚Ññ3")
                #     f.write(f"{NowDate()}  –ù–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç–∏–∫ –≤–∏–¥ ‚Ññ3\n")
                #     sleep(6)
                elif button_x1.exists:
                    button_x1.click_exists(5)
                    flag2 -= 1
                    print(f"{NowDate()}  –ù–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç–∏–∫ –≤–∏–¥ ‚Ññ1")
                    f.write(f"{NowDate()}  –ù–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç–∏–∫ –≤–∏–¥ ‚Ññ1\n")
                    sleep(6)

                elif button_x2.exists and not button_x3.exists:
                    if devices_name == "XiaomiMi9":
                        # d.click(954, 500)
                        button_x2.click_exists(5)
                        flag2 -= 1
                    if devices_name == "XiaomiRedmiNote9":
                        d.click(0.940, 0.220)
                        # button_x2.click_exists(5)
                        flag2 -= 1
                    if devices_name == "Samsung A32":
                        # d.click(962, 273)
                        button_x2.click_exists(5)
                        flag2 -= 1
                    print(f"{NowDate()}  –ù–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç–∏–∫ –≤–∏–¥ ‚Ññ2")
                    f.write(f"{NowDate()}  –ù–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç–∏–∫ –≤–∏–¥ ‚Ññ2\n")
                    sleep(7)
                elif button_x2.exists and button_x3.exists:
                    if devices_name == "XiaomiMi9":
                        # d.click(954, 500)
                        button_x3.click_exists(5)
                        flag2 -= 1
                    if devices_name == "XiaomiRedmiNote9":
                        # d.click(980, 490)
                        button_x3.click_exists(5)
                        flag2 -= 1
                    if devices_name == "Samsung A32":
                        # d.click(962, 273)
                        button_x3.click_exists(5)
                        flag2 -= 1
                    print(f"{NowDate()}  –ù–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç–∏–∫ –≤–∏–¥ ‚Ññ3")
                    f.write(f"{NowDate()}  –ù–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç–∏–∫ –≤–∏–¥ ‚Ññ3\n")
                    sleep(7)
                elif flag2 == 1:
                    print("\033[31m{}\033[0m".format(f"{NowDate()}  –ò–∫–æ–Ω–∫–∞ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω "))
                    f.write(f"{NowDate()}  –ò–∫–æ–Ω–∫–∞ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω \n")
                    SendMessage(f"{devices_name}: üî• {ssid}: –ü–æ—Ä—Ç–∞–ª –Ω–µ –ø—Ä–æ–≥—Ä—É–∑–∏–ª—Å—è")
                    check_err = 1
                    err_name = 'Error: –ü–æ—Ä—Ç–∞–ª –Ω–µ –ø—Ä–æ–≥—Ä—É–∑–∏–ª—Å—è'
                    # result 0 - —É—Å–ø–µ—à–Ω–æ \ 1 - –æ—à–∏–±–∫–∞ \ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞
                    # addResult(ssid, devices_name, 3, "Portal not found", f"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4")
                    return False
                else:
                    flag2 -= 1
                    sleep(5)
                    continue

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∫–æ–Ω–∫–∏ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ
            if 'dit' in ssid or ssid == '_P_ttk_hospitals' or ssid == '_P_Sola_MT_507':
                if final_check.exists:
                    print(f"{NowDate()}  –ò–∫–æ–Ω–∫–∞ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ –Ω–∞–π–¥–µ–Ω–∞")
                    f.write(f"{NowDate()}  –ò–∫–æ–Ω–∫–∞ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ –Ω–∞–π–¥–µ–Ω–∞\n")
                else:
                    print("\033[31m{}\033[0m".format(f"{NowDate()}  –ò–∫–æ–Ω–∫–∞ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"))
                    f.write(f"{NowDate()}  –ò–∫–æ–Ω–∫–∞ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞\n")
            else:
                if final_check.exists or final_check2.exists:
                    print(f"{NowDate()}  –ò–∫–æ–Ω–∫–∞ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ –Ω–∞–π–¥–µ–Ω–∞")
                    f.write(f"{NowDate()}  –ò–∫–æ–Ω–∫–∞ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ –Ω–∞–π–¥–µ–Ω–∞\n")
                else:
                    print("\033[31m{}\033[0m".format(f"{NowDate()}  –ò–∫–æ–Ω–∫–∞ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"))
                    f.write(f"{NowDate()}  –ò–∫–æ–Ω–∫–∞ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞\n")

            # -- –ù–∞ –ø–æ—Ä—Ç–∞–ª–µ
            if devices_name != 'Samsung A32':
                tick = d(resourceId="android:id/button2")
                tick.click_exists(10)
                print(f"{NowDate()}  –ù–∞–∂–∞—Ç–∞ –≥–∞–ª–æ—á–∫–∞")
                time_end_avtoriz = time() - time_start_avtoriz
                print(f"–í—Ä–µ–º—è –∑–∞—Ç—Ä–∞—á–µ–Ω–Ω–æ–µ –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é: {round(time_end_avtoriz, 2)} —Å–µ–∫")
                f.write(f"{NowDate()}  –ù–∞–∂–∞—Ç–∞ –≥–∞–ª–æ—á–∫–∞\n")
            else:
                print(f"{NowDate()}  –ö–µ–ø—Ç–∏–≤ –∑–∞–∫—Ä—ã–ª—Å—è")
                f.write(f"{NowDate()}  –ö–µ–ø—Ç–∏–≤ –∑–∞–∫—Ä—ã–ª—Å—è\n")
                time_end_avtoriz = time() - time_start_avtoriz
                print(f"–í—Ä–µ–º—è –∑–∞—Ç—Ä–∞—á–µ–Ω–Ω–æ–µ –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é: {round(time_end_avtoriz, 2)} —Å–µ–∫")

            # -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç
            if Functions.CheckInternet.CheckInternet(d, devices_name):
                print(f"{NowDate()}  –î–æ—Å—Ç—É–ø –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –µ—Å—Ç—å!")
                f.write(f"{NowDate()}  –î–æ—Å—Ç—É–ø –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –µ—Å—Ç—å! \n")
            else:
                print("\033[31m{}\033[0m".format(f"{NowDate()} –î–æ—Å—Ç—É–ø–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –Ω–µ—Ç! –°–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω "))
                f.write(f"{NowDate()} –î–æ—Å—Ç—É–ø–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –Ω–µ—Ç! –°–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω \n")
                SendMessage(f"{devices_name}: üî• {ssid}: –î–æ—Å—Ç—É–ø–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –Ω–µ—Ç!")
                check_err = 1
                err_name = 'Error: No access Internet'
                # result 0 - —É—Å–ø–µ—à–Ω–æ \ 1 - –æ—à–∏–±–∫–∞ \ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞
                # addResult(ssid, devices_name, 1, "Internet offline", f"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4")
                return False

            # -- –§–∏–Ω–∏—à
            SendMessage(f"{devices_name}: üì£ {ssid}: –¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω ‚úÖ ")
            print("\033[32m{}\033[0m".format(f"{NowDate()}  –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω ‚úÖ"))
            f.write(f"{NowDate()}  –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω ‚úÖ \n")
            # result 0 - —É—Å–ø–µ—à–Ω–æ \ 1 - –æ—à–∏–±–∫–∞ \ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞
            # addResult(ssid, devices_name, 0, "PASS", f"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4")
            return True


        finally:
            sleep(2)
            if d.screenrecord.stop() == "False":
                print("False")
                print(d.screenrecord.stop())
            if err400 and 'Xiaomi' in devices_name:
                XiaomiCl(d, devices_name)
            d.press("home")
            sleep(2)
            d.shell('svc wifi disable')
            d.shell('input keyevent 26')
            requests.get(
                f"http://10.1.11.2/auth/deauthorize/{mac}") if ssid == '_P_dit_enforta_street' else requests.get(
                f"http://sae.msk.vmet.ro/v1/drop/mac/{mac}")
            print(f"{NowDate()}  –°–µ—Å—Å–∏—è —É–±–∏—Ç–∞ ‚úÖ")
            #print(id, ntest, dt, ssid, link_video, check_err, err_name)
            time_finish = time() - time_start
            print(f"–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Å–∫—Ä–∏–ø—Ç–∞: {round(time_finish, 2)} —Å–µ–∫")
            if check_err == 1:
                # sendYandexScreencast(f"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4",
                #                      f"{devices_name}_{name_video}.mp4")
                Send_screencast(f"screencasts/{devices_name}_{name_video}.mp4", f'–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è {devices_name}\n{ssid}')

            print(f"_____________________________________________________________")
            f.write(f"{NowDate()}  –°–µ—Å—Å–∏—è —É–±–∏—Ç–∞ ‚úÖ\n")

            f.write(f"_____________________________________________________________\n")
            sleep(10)
            client.execute(
                'INSERT INTO devdb1.auto_tests (id, ntest, dt, ssid, link_video, err_flags, err_name) VALUES',
                [{'id': id, 'ntest': ntest, 'dt': dt, 'ssid': ssid, 'link_video': link_video, 'err_flags': check_err,
                  'err_name': err_name}])
