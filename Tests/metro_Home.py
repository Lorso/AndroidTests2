def AvtoTest(ser, MAC, DevicesName):
    import uiautomator2 as u2
    from time import sleep
    import Functions.CheckInternet
    from Functions.DataName import NowDate
    from Functions.DataName import NowDateVideo
    from Functions.TelegramApi import SendMessage
    from Functions.TelegramApi import Send_screencast
    from Functions.TelegramApi import Send_File
    from Functions.LockDisplay import Lock

    ssid = '_P_metro'
    name_video = 'P_metro'
    p = NowDateVideo()
    d = u2.connect_usb(ser)
    flag = 5

    flag2 = 10
    f = open("logs/buttonClick.txt", 'w', encoding='utf-8')

    try:
        print(f"{NowDate()}  {DevicesName}: üì£–ê–≤—Ç–æ—Ç–µ—Å—Ç –∑–∞–ø—É—â–µ–Ωüì±")
        f.write(f"{NowDate()}  {DevicesName}: üì£–ê–≤—Ç–æ—Ç–µ—Å—Ç –∑–∞–ø—É—â–µ–ΩüöÄ\n")
        # Functions.TelegramApi.SendMessage(
        #     f"{DevicesName}: üì£–ê–≤—Ç–æ—Ç–µ—Å—Ç –∑–∞–ø—É—â–µ–Ωüì±")  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª
        if d.info.get('screenOn'):
            d.shell(
                'input keyevent 26')  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∞. –ï—Å–ª–∏ –∞–∫—Ç–∏–≤–µ–Ω, —Ç–æ –≤—ã–∫–ª—é—á–∏—Ç—Å—è –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ç–µ—Å—Ç–∞
        Lock(d)  # –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —ç–∫—Ä–∞–Ω–∞
        d.screenrecord(f"screencasts/{DevicesName}_{name_video}.mp4")  # –ó–∞–ø—É—Å–∫ –∑–∞–ø–∏—Å–∏ —ç–∫—Ä–∞–Ω–∞

        # -- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ ssid
        d.shell("am start -a android.intent.action.VIEW  https://auth.wi-fi.ru/?segment=metro")
        sleep(5)
        # -- –ù–∞–∂–∞—Ç–∏–µ –Ω–∞ "–í–æ–π—Ç–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç"
        while flag != 0:
            OpenSixtyMin = d(text='–í–æ–π—Ç–∏ –Ω–∞ 60 –º–∏–Ω—É—Ç')
            if OpenSixtyMin.exists:
                sleep(2)
                # –∫–Ω–æ–ø–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–∏ 5 —Å–µ–∫. –ù—É–∂–µ–Ω –∫–ª–∏–∫–∞–±–ª–µ
                OpenSixtyMin.click(2)
                print(f"{NowDate()}  –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ '–í–æ–π—Ç–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç'")
                f.write(f"{NowDate()}  –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ '–í–æ–π—Ç–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç'\n")
                sleep(3)
                break
            if flag == 1:
                print(f"{NowDate()}  –ö–Ω–æ–ø–∫–∞ '–í–æ–π—Ç–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω ")
                f.write(f"{NowDate()}  –ö–Ω–æ–ø–∫–∞ '–í–æ–π—Ç–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω \n")
                quit()
            else:
                flag -= 1
                sleep(3)
                continue
        # -- –ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º—ã
        ButtonX1 = d.xpath(
            '//*[@text="–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Wi-Fi"]/android.view.View[1]/android.view.View[2]/android.view.View[1]/android.view.View[1]/android.view.View[1]/android.view.View[3]/android.view.View[1]')
        ButtonX2 = d.xpath(
            '//*[@text="–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Wi-Fi"]/android.view.View[1]/android.view.View[2]/android.view.View[1]/android.view.View[1]')
        ButtonX3 = d.xpath('// *[ @ resource - id = "app"] / android.view.View[1]/android.view.View[3]')
        # d.xpath('//*[@text="Ó†ö"]')
        Next = d(text="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", className='android.widget.Button')
        Continue = d(text="–î–∞–ª–µ–µ", className='android.widget.Button')

        for i in range(20):
            if Next.exists or Continue.exists:
                break
            if ButtonX1.exists:
                ButtonX1.click_exists(5)
                print(f"{NowDate()}  –ù–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç–∏–∫ –≤–∏–¥ ‚Ññ1")
                f.write(f"{NowDate()}  –ù–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç–∏–∫ –≤–∏–¥ ‚Ññ1\n")
                sleep(5)
            elif ButtonX2.exists:
                ButtonX2.click_exists(5)
                print(f"{NowDate()}  –ù–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç–∏–∫ –≤–∏–¥ ‚Ññ2")
                f.write(f"{NowDate()}  –ù–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç–∏–∫ –≤–∏–¥ ‚Ññ2\n")
                sleep(5)
            elif flag2 == 1:
                print(f"{NowDate()} –ö–Ω–æ–ø–∫–∞ '–î–∞–ª–µ–µ –∏–ª–∏ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω ")
                f.write(f"{NowDate()} –ö–Ω–æ–ø–∫–∞ '–î–∞–ª–µ–µ –∏–ª–∏ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω\n")
                SendMessage(f"{DevicesName}: üî• {ssid}: –ê–≤—Ç–æ—Ç–µ—Å—Ç —É–ø–∞–ª")
                quit()
            else:
                flag2 -= 1
                sleep(3)
                continue

        if Next.exists:
            Next.click(1)
            print(f"{NowDate()}  –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
            f.write(f"{NowDate()}  –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å\n")
        else:
            Continue = d(text="–î–∞–ª–µ–µ", className='android.widget.Button')
            Continue.click()
            print(f"{NowDate()}  –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –î–∞–ª–µ–µ")
            f.write(f"{NowDate()}  –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –î–∞–ª–µ–µ\n")

        sleep(5)
        final_check2 = d(description="cabinet.wi-fi")
        final_check = d.xpath('//*[@text="cabinet.wi-fi"]')
        while not (final_check.exists or final_check2.exists):
            # print(final_check.exists)
            # print(final_check2.exists)
            if ButtonX1.exists:
                ButtonX1.click_exists(5)
                print(f"{NowDate()}  –ù–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç–∏–∫ –≤–∏–¥ ‚Ññ1")
                f.write(f"{NowDate()}  –ù–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç–∏–∫ –≤–∏–¥ ‚Ññ1\n")
                sleep(5)
            elif ButtonX2.exists:
                if DevicesName == "XiaomiMi9":
                    # ButtonX2.click_exists(5)
                    d.click(954, 354)
                else:
                    d.click(987, 271) # redmi9 –ø–æ—Å–ª–µ —Å–º–µ–Ω—ã –º–∞—Å—à—Ç–∞–±–∞
                print(f"{NowDate()}  –ù–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç–∏–∫ –≤–∏–¥ ‚Ññ2")
                f.write(f"{NowDate()}  –ù–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç–∏–∫ –≤–∏–¥ ‚Ññ2\n")
                sleep(5)
            elif ButtonX3.exists:
                ButtonX3.click_exists(5)
                print(f"{NowDate()}  –ù–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç–∏–∫ ‚Ññ5 –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ")
                f.write(f"{NowDate()}  –ù–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç–∏–∫ ‚Ññ5 –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ\n")
            elif flag2 == 1:
                print(f"{NowDate()}  –ò–∫–æ–Ω–∫–∞ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω ")
                f.write(f"{NowDate()}  –ò–∫–æ–Ω–∫–∞ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω \n")
                SendMessage(f"{DevicesName}: üî¥ {ssid}: –ê–≤—Ç–æ—Ç–µ—Å—Ç —É–ø–∞–ª")
                quit()
            else:
                flag2 -= 1
                sleep(5)
                continue

        # —Ç—É—Ç –ø–æ–∫–∞ –Ω–µ —Ç—Ä–æ–≥–∞–ª
        assert final_check.exists or final_check2.exists, f"{NowDate()}  –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞.–ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –Ω–∞ –Ω–æ–≤–æ—Å—Ç–Ω–æ–º –ø–æ—Ä—Ç–∞–ª–µ"

        # -- –ù–∞ –ø–æ—Ä—Ç–∞–ª–µ
        # Functions.CheckInternet.CheckInternet(d)
        if Functions.CheckInternet.CheckInternet(d):
            print(f"{NowDate()}  –î–æ—Å—Ç—É–ø –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –µ—Å—Ç—å!")
            f.write(f"{NowDate()}  –î–æ—Å—Ç—É–ø –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –µ—Å—Ç—å! \n")
        else:
            print(f"{NowDate()} –î–æ—Å—Ç—É–ø–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –Ω–µ—Ç! –°–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω ")
            f.write(f"{NowDate()} –î–æ—Å—Ç—É–ø–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –Ω–µ—Ç! –°–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω \n")
            SendMessage(f"{DevicesName}: üî¥ {ssid}: –ê–≤—Ç–æ—Ç–µ—Å—Ç —É–ø–∞–ª.–î–æ—Å—Ç—É–ø–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –Ω–µ—Ç!")
            quit()

        SendMessage(f"{DevicesName}: üì£ {ssid}: –ê–≤—Ç–æ—Ç–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω ‚úÖ ")
        print(f"{NowDate()}  –ê–≤—Ç–æ—Ç–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω ‚úÖ")
        f.write(f"{NowDate()}  –ê–≤—Ç–æ—Ç–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω ‚úÖ \n")

    except AssertionError:
        print(f"{NowDate()}  üî¥ –ê–≤—Ç–æ—Ç–µ—Å—Ç —É–ø–∞–ª. –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –Ω–∞ –Ω–æ–≤–æ—Å—Ç–Ω–æ–º –ø–æ—Ä—Ç–∞–ª–µ")
        f.write(f"{NowDate()}  üî¥ –ê–≤—Ç–æ—Ç–µ—Å—Ç —É–ø–∞–ª. –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –Ω–∞ –Ω–æ–≤–æ—Å—Ç–Ω–æ–º –ø–æ—Ä—Ç–∞–ª–µ\n")
        SendMessage(f"{DevicesName}: üî¥ {ssid}: –ê–≤—Ç–æ—Ç–µ—Å—Ç —É–ø–∞–ª")

    finally:
        sleep(2)
        d.press("home")
        d.screenrecord.stop()
        Send_screencast(f"screencasts/{DevicesName}_{name_video}.mp4", f'–°–∫—Ä–∏–Ω–∫–∞—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è {DevicesName}\n{ssid}')
        d.shell('input keyevent 26')
        f.close()
        Send_File("logs/buttonClick.txt")
