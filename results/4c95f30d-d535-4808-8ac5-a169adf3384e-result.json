{"name": "test_eos_guest", "status": "broken", "statusDetails": {"message": "RuntimeError: USB device be11611b is offline", "trace": "ser = 'be11611b', mac = '60-ab-67-f7-1d-a0', devices_name = 'XiaomiSE'\nssid = '_P_dit_guest_wifi', name_video = 'guest'\n\n    def AutoTest(ser, mac, devices_name, ssid, name_video):\n        import uiautomator2 as u2\n        from time import sleep\n        from time import time\n        from datetime import datetime\n        import requests\n        from Functions.Yandex import sendYandexScreencast\n        import Functions.CheckInternet\n        from Functions.ClearCookie import XiaomiCl\n        from Functions.DataName import NowDate\n        from Functions.TelegramApi import SendMessage\n        from Functions.TelegramApi import Send_screencast\n        from Functions.LockDisplay import Lock\n        from Functions.Sumsung import Connect_WiFi\n        from Functions.pgconnect import addResult\n        from clickhouse_driver import Client\n    \n    \n    \n        time_start = time()\n    \n        # –ë–î\n        client = Client(host='10.1.240.77', port=\"9000\")\n    \n        global id\n        # id = 6  # Xiaomi 10t pro\n        id = 5  # Xiaomi SE9\n        #id = 4 # Oneplus 9R\n        #id = 3 #Xiaomi 9 pro\n    \n        LV = str(client.execute('SELECT LAST_VALUE(ntest) FROM devdb1.auto_tests'))\n        global ntest\n        ntest = int((LV.partition('(')[2]).partition(',')[0]) + 1\n        global dt\n        dt = datetime.now().replace(microsecond=0)\n        global link_video\n        link_video = 'tg'\n        err_flags = 0\n    \n        d = u2.connect_usb(ser)\n        flag = 6\n        flag2 = 15\n        err400 = False\n        check_err = 0\n        global err_name\n        err_name = ''\n        #imTestX = \"ScreeX.jpg\"\n    \n        with open(\"logs/buttonClick.txt\", 'a', encoding='utf-8') as f:\n            try:\n                print(f\"{NowDate()}  {devices_name}: üì£ {ssid}:  –¢–µ—Å—Ç –∑–∞–ø—É—â–µ–Ωüì±\")\n                f.write(f\"{NowDate()}  {devices_name}: üì£ {ssid}:  –¢–µ—Å—Ç –∑–∞–ø—É—â–µ–ΩüöÄ\\n\")\n    \n                if d.info.get('screenOn'):\n                    d.shell('input keyevent 26')  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∞. –ï—Å–ª–∏ –≤–∫–ª, —Ç–æ –≤—ã–∫–ª –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ç–µ—Å—Ç–∞\n                Lock(d)  # –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —ç–∫—Ä–∞–Ω–∞\n    \n                # –£–±–µ—Ä–µ—Ç –≤—Å–ø–ª—ã–≤–∞—à–∫—É –æ—Ç USB –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è\n                if d(resourceId=\"miui:id/alertTitle\").exists:\n                    d.click(0.488, 0.902)\n    \n                if devices_name == \"Samsung A32\":\n                    Connect_WiFi(d)\n                else:\n                    d.shell(\"am start -n com.android.settings/com.android.settings.wifi.WifiSettings\")  # –ü–µ—Ä–µ—Ö–æ–¥ –≤ –Ω–∞—Å—Ç—Ä\n                    wifi = d(text='Wi-Fi', className='android.widget.TextView')\n                    wifi.click_exists(3)\n    \n                d.shell('svc wifi enable')  # –í–∫–ª—é—á–µ–Ω–∏–µ Wi-Fi\n                d.screenrecord(f\"screencasts/{devices_name}_{name_video}.mp4\")  # –ó–∞–ø—É—Å–∫ –∑–∞–ø–∏—Å–∏ —ç–∫—Ä–∞–Ω–∞\n    \n                # -- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SSID\n                if devices_name == \"Samsung A32\":\n                    ssid_name = d(resourceId=\"com.android.settings:id/title\", text=f\"{ssid}\")\n                    ssid_name.wait(True, 60)\n                    if ssid_name.exists:\n                        ssid_name.click_gone(5, 5)\n                        sleep(6)\n                    else:\n                        ssid_name.click_gone(5, 5)\n                        sleep(6)\n                if devices_name == 'OnePlus 9R':\n                    d.shell('svc wifi enable')\n                    sleep(5)\n                    d.shell(\"am start -n com.steinwurf.adbjoinwifi/.MainActivity -e ssid '\" + ssid + \"'\")\n                    sleep(10)\n                    d.app_start(\"com.android.settings\", \".Settings$WifiSettings2Activity\")\n                    sleep(5)\n                    if d(description=\"–ù–∞—Å—Ç—Ä–æ–π–∫–∏\").exists(timeout=6):\n                        d(description=\"–ù–∞—Å—Ç—Ä–æ–π–∫–∏\").click()\n                        sleep(3)\n                        if d(resourceId=\"android:id/title\", text=\"–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ\").exists():\n                            d(resourceId=\"android:id/title\", text=\"–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ\").click()\n                        sleep(3)\n                        if d(resourceId=\"android:id/title\", text=\"–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å\").exists():\n                            d(resourceId=\"android:id/title\", text=\"–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å\").click()\n                        sleep(3)\n                        if d(resourceId=\"android:id/text1\", text=\"MAC-–∞–¥—Ä–µ—Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞\").exists():\n                            d(resourceId=\"android:id/text1\", text=\"MAC-–∞–¥—Ä–µ—Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞\").click()\n                        if d(text=\"–í–æ–π—Ç–∏\").exists():\n                            d(resourceId=\"com.android.settings:id/button2\").click()\n                    if d(resourceId=\"android:id/title\", text=\"–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å\").exists():\n    \n                        d(resourceId=\"android:id/title\", text=\"–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å\").click()\n                        sleep(3)\n                        if d(resourceId=\"android:id/text1\", text=\"MAC-–∞–¥—Ä–µ—Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞\").exists():\n                            d(resourceId=\"android:id/text1\", text=\"MAC-–∞–¥—Ä–µ—Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞\").click()\n                        if d(text=\"–í–æ–π—Ç–∏\").exists():\n                            d(resourceId=\"com.android.settings:id/button2\").click()\n                else:\n                    if d(resourceId=\"miui:id/buttonPanel\").exists:\n                        d(resourceId=\"miui:id/buttonPanel\").click_gone()\n                    ssid_name = d(text=f'{ssid}', className='android.widget.CheckedTextView')\n                    if ssid == 'sas': # –¥–ª—è –æ—Å–æ–±–µ–Ω–Ω–æ–≥–æ —Å–∏–¥–∞\n                        # d.shell(\"am start -n com.steinwurf.adbjoinwifi/.MainActivity -e ssid '\" + ssid + \"'\")\n                        # sleep(10)\n                        # d.app_start(\"com.android.settings\", \".Settings$WifiSettings2Activity\")\n                        # sleep(5)\n                        # d(resourceId=\"com.android.systemui:id/halo\").click()\n                        # sleep(2)\n                        # d(resourceId=\"com.miui.home:id/icon_icon\", description=\"–ù–∞—Å—Ç—Ä–æ–π–∫–∏\").click()\n                        # sleep(2)\n                        # d.xpath(\n                        #     '//*[@resource-id=\"android:id/list\"]/android.widget.LinearLayout[5]/android.widget.RelativeLayout[1]').click()\n                        # if ssid_name.exists:\n                        #     ssid_name.click_gone(5, 5)\n                        # sleep(8)\n                        ssid_name.wait(True, 40)\n                        if ssid_name.exists:\n                            ssid_name.click_gone(5, 5)\n                            sleep(8)\n                        else:\n                            d.shell('svc wifi disable')\n                            sleep(2)\n                            d.shell('svc wifi enable')\n                            ssid_name.wait(True, 20)\n                            ssid_name.click_gone(5, 5)\n                            sleep(8)\n                    else:\n                        ssid_name.wait(True, 20)\n                        if ssid_name.exists:\n                            ssid_name.click_gone(5, 5)\n                            sleep(8)\n                        else:\n                            # d(scrollable=True).scroll.to(text=f\"{ssid}\")\n                            d(scrollable=True).scroll.vert.forward(steps=200) # —Å–∫—Ä–æ–ª–ª –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–∏–¥–∞\n                            ssid_name.click_gone(5, 5)\n                            sleep(8)\n                            if not ssid_name.exists:\n                                d(text=\"–û–±–Ω–æ–≤–∏—Ç—å\").click()\n                                sleep(10)\n                                if ssid_name.exists:\n                                    ssid_name.click_gone(5, 5)\n                                    sleep(8)\n                                elif not ssid_name.exists:\n                                    # d(scrollable=True).scroll.to(text=f\"{ssid}\")\n                                    d(scrollable=True).scroll.vert.backward(steps=200)  # —Å–∫—Ä–æ–ª–ª –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–∏–¥–∞\n                                    ssid_name.click_gone(5, 5)\n                                    sleep(8)\n                                else:\n                                    if d(resourceId=\"android:id/widget_frame\").exists:\n                                        d(resourceId=\"android:id/widget_frame\").click()\n                                        sleep(2)\n                                        d(resourceId=\"android:id/checkbox\").click()\n                                        if ssid_name.exists:\n                                            ssid_name.click_gone(5, 5)\n                                            sleep(8)\n                            #if not ssid_name.exists:\n                                # d.shell(\"am start -n com.steinwurf.adbjoinwifi/.MainActivity -e ssid '\" + ssid + \"'\")\n                                # sleep(10)\n                                # d.app_start(\"com.android.settings\", \".Settings$WifiSettings2Activity\")\n                                # sleep(5)\n                                # d(resourceId=\"com.android.systemui:id/halo\").click()\n                                # sleep(2)\n                                # d(resourceId=\"com.miui.home:id/icon_icon\", description=\"–ù–∞—Å—Ç—Ä–æ–π–∫–∏\").click()\n                                # sleep(2)\n                                # d.xpath(\n                                #     '//*[@resource-id=\"android:id/list\"]/android.widget.LinearLayout[5]/android.widget.RelativeLayout[1]').click()\n                                # if ssid_name.exists:\n                                #     ssid_name.click_gone(5, 5)\n                                # sleep(8)\n    \n    \n                # -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ —É–±–∏—Ç–æ–π —Å–µ—Å—Å–∏–∏\n                if devices_name == 'OnePlus 9R':\n                    check_connect = d(text=\"–ü–æ–¥–∫–ª—é—á–µ–Ω–æ\")\n                else:\n                    check_connect = d.xpath('//*[@text=\"–ü–æ–¥–∫–ª—é—á–µ–Ω–æ\"]')\n                if check_connect.exists and ssid != \"_P_ttk_hospitals\":\n                    if Functions.CheckInternet.CheckInternet(d, devices_name):\n                        print(\"\\033[31m{}\\033[0m\".format(f\"{NowDate()}  –ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞.–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.\"))\n                        f.write(f\"{NowDate()}  –ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞.–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.\\n\")\n                        SendMessage(f\"{devices_name}: ‚õî {ssid}: –°–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞\")\n                        check_err = 1\n                        err_name = 'Error: No kill session'\n    \n    \n    \n                        # result 0 - —É—Å–ø–µ—à–Ω–æ \\ 1 - –æ—à–∏–±–∫–∞ \\ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \\ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞\n                        # err 0 - –Ω–µ –±–∞–≥ \\ 900 - –æ—à–∏–±–∫–∞ 900 \\ 100 - –æ—à–∏–±–∫–∞ 100\\\n                        # addResult(ssid, devices_name, 2, \"Active session\", f\"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4\")\n                        return False\n                    else:\n                        print(\"\\033[31m{}\\033[0m\".format(f\"{NowDate()}  –ö–µ–ø—Ç–∏–≤ –Ω–µ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª.–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.\"))\n                        f.write(f\"{NowDate()}  –ö–µ–ø—Ç–∏–≤ –Ω–µ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª.–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.\\n\")\n                        SendMessage(f\"{devices_name}: üî• {ssid}: –¢–µ—Å—Ç —É–ø–∞–ª\")\n                        check_err = 1\n                        err_name = 'Error: No Captive'\n                        # result 0 - —É—Å–ø–µ—à–Ω–æ \\ 1 - –æ—à–∏–±–∫–∞ \\ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \\ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞\n                        # addResult(ssid, devices_name, 1, \"Captive not found\", f\"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4\")\n                        return False\n    \n    \n                # -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∑–ª—ë—Ç–∞ –∫–µ–ø—Ç–∏–≤–∞\n                if devices_name == \"Samsung A32\":\n                    captive = d.xpath('//*[@resource-id=\"android:id/action_bar\"]/android.widget.LinearLayout[1]')\n                if devices_name == 'OnePlus 9R':\n                    captive = d.xpath('//*[@content-desc=\"–ï—â—ë\"]')\n                else:\n                    captive = d(text=\"–ü–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\")\n    \n                captive.wait(True, 60)\n                if captive.exists:\n                    print(f\"{NowDate()}  SSID –Ω–∞–π–¥–µ–Ω.–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞—á–∞–ª–∞—Å—å\")\n                    f.write(f\"{NowDate()}  SSID –Ω–∞–π–¥–µ–Ω.–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞—á–∞–ª–∞—Å—å\\n\")\n                    print(f\"{NowDate()}  –ö–µ–ø—Ç–∏–≤ –æ—Ç–∫—Ä—ã–ª—Å—è\")\n                    f.write(f\"{NowDate()}  –ö–µ–ø—Ç–∏–≤ –æ—Ç–∫—Ä—ã–ª—Å—è\\n\")\n                elif not ssid_name.exists:\n                    print(\"\\033[31m{}\\033[0m\".format(f\"{NowDate()}  SSID –Ω–µ –Ω–∞–π–¥–µ–Ω.–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.\"))\n                    f.write(f\"{NowDate()}  SSID –Ω–µ –Ω–∞–π–¥–µ–Ω.–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.\\n\")\n                    SendMessage(f\"{devices_name}: ‚õî {ssid}: SSID –Ω–µ –Ω–∞–π–¥–µ–Ω\")\n                    check_err = 1\n                    err_name = 'Error: No SSID'\n                    # result 0 - —É—Å–ø–µ—à–Ω–æ \\ 1 - –æ—à–∏–±–∫–∞ \\ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \\ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞\n                    # addResult(ssid, devices_name, 3, \"SSID not found\", f\"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4\")\n                    return False\n                else:\n                    print(\"\\033[31m{}\\033[0m\".format(f\"{NowDate()}  –ö–µ–ø—Ç–∏–≤ –Ω–µ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª.–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.\"))\n                    f.write(f\"{NowDate()}  –ö–µ–ø—Ç–∏–≤ –Ω–µ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª.–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.\\n\")\n                    SendMessage(f\"{devices_name}: üî• {ssid}: –¢–µ—Å—Ç —É–ø–∞–ª\")\n                    check_err = 1\n                    err_name = 'Error: No Captive'\n                    # result 0 - —É—Å–ø–µ—à–Ω–æ \\ 1 - –æ—à–∏–±–∫–∞ \\ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \\ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞\n                    # addResult(ssid, devices_name, 1, \"Captive not found\", f\"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4\")\n                    return False\n    \n                    # -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ —É–±–∏—Ç–æ–π —Å–µ—Å—Å–∏–∏ 2\n                    if Functions.CheckInternet.CheckInternet(d, devices_name):\n    \n                        print(\"\\033[31m{}\\033[0m\".format(f\"{NowDate()}  –ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞.–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.\"))\n                        f.write(f\"{NowDate()}  –ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞.–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.\\n\")\n                        SendMessage(f\"{devices_name}: ‚õî {ssid}: –°–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞\")\n                        check_err = 1\n                        err_name = 'Error: No kill session'\n                        # result 0 - —É—Å–ø–µ—à–Ω–æ \\ 1 - –æ—à–∏–±–∫–∞ \\ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \\ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞\n                        # addResult(ssid, devices_name, 2, \"Active session\", f\"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4\")\n                    else:\n                        print(\"\\033[31m{}\\033[0m\".format(f\"{NowDate()}  –ö–µ–ø—Ç–∏–≤ –Ω–µ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª.–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.\"))\n                        f.write(f\"{NowDate()}  –ö–µ–ø—Ç–∏–≤ –Ω–µ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª.–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.\\n\")\n                        SendMessage(f\"{devices_name}: üî• {ssid}: –¢–µ—Å—Ç —É–ø–∞–ª\")\n                        check_err = 1\n                        err_name = 'Error: No Captive'\n                        # result 0 - —É—Å–ø–µ—à–Ω–æ \\ 1 - –æ—à–∏–±–∫–∞ \\ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \\ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞\n                        # addResult(ssid, devices_name, 1, \"Captive not found\", f\"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4\")\n                    return False\n    \n                # -- –ß–µ–∫–µ—Ä –æ—à–∏–±–∫–∏ 400\n                if d(text=\"Error 400: Bad Request\").exists:\n                    print(\"\\033[31m{}\\033[0m\".format(f\"{NowDate()}  Error 400: Bad Request\"))\n                    f.write(f\"{NowDate()}  Error 400: Bad Request\\n\")\n                    SendMessage(f\"{devices_name}: üî• {ssid}: Error 400: Bad Request\")\n                    err_name = 'Error: 400 Bad Request'\n                    err400 = True\n                    check_err = 1\n                    # result 0 - —É—Å–ø–µ—à–Ω–æ \\ 1 - –æ—à–∏–±–∫–∞ \\ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \\ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞\n                    # addResult(ssid, devices_name, 1, \"err400\", f\"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4\")\n                    return False\n    \n                # -- –ß–µ–∫–µ—Ä –∑–∞–≥–ª—É—à–∫–∏\n                check_random = d.xpath('//*[@resource-id=\"changeSettings\"]')\n                if check_random.exists:\n                    print(\"\\033[31m{}\\033[0m\".format(f\"{NowDate()} –ù–∞–π–¥–µ–Ω–∞ –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –º–∞—Å\"))\n                    f.write(f\"{NowDate()}  –ù–∞–π–¥–µ–Ω–∞ –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –º–∞—Å\\n\")\n                    SendMessage(f\"{devices_name}: üî• {ssid}: –ù–∞–π–¥–µ–Ω–∞ –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –º–∞—Å\")\n                    check_err = 1\n                    err_name = 'Error: Unknown'\n                    # result 0 - —É—Å–ø–µ—à–Ω–æ \\ 1 - –æ—à–∏–±–∫–∞ \\ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \\ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞\n                    # addResult(ssid, devices_name, 1, \"random mac\", f\"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4\")\n                    return False\n    \n                #–û—à–∏–±–∫–∏\n                err900 = d.xpath('//*[@text=\"–û—à–∏–±–∫–∞ #900\"]')\n                err100 = d.xpath('//*[@text=\"–û—à–∏–±–∫–∞ #100\"]')\n                err304 = d.xpath('//*[.=\"–û—à–∏–±–∫–∞ #304\"]')\n                # -- –ù–∞–∂–∞—Ç–∏–µ –Ω–∞ \"–í–æ–π—Ç–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç\"\n    \n                open_sixty_min = d.xpath('//*[@text=\"–í–æ–π—Ç–∏ –≤ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç\" or @text=\"–í–æ–π—Ç–∏ –Ω–∞ 60 –º–∏–Ω—É—Ç\" or @text=\"Internetga kirish\"]')\n                open_sixty_min.wait(60)\n                while flag != 0:\n                    if open_sixty_min.exists:\n                        # –∫–Ω–æ–ø–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–∏ 5 —Å–µ–∫. –ù—É–∂–µ–Ω –∫–ª–∏–∫–∞–±–ª–µ\n                        open_sixty_min.click_exists(20)\n                        print(f\"{NowDate()}  –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ '–í–æ–π—Ç–∏ –≤ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç'\")\n                        f.write(f\"{NowDate()}  –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ '–í–æ–π—Ç–∏ –≤ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç'\\n\")\n                        time_start_avtoriz = time()\n                        flag -= 1\n                        break\n                    if err100.exists:\n                        print(\"\\033[31m{}\\033[0m\".format(f\"{NowDate()} –û—à–∏–±–∫–∞ 100.–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω\"))\n                        f.write(f\"{NowDate()} –û—à–∏–±–∫–∞ 100.–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω\\n\")\n                        SendMessage(f\"{devices_name}: üî• {ssid}: –û—à–∏–±–∫–∞ 100\")\n                        check_err = 1\n                        err_name = 'Error: 100'\n                        return False\n                    if err304.exists:\n                        print(\"\\033[31m{}\\033[0m\".format(f\"{NowDate()} –û—à–∏–±–∫–∞ 304.–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω\"))\n                        f.write(f\"{NowDate()} –û—à–∏–±–∫–∞ 304.–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω\\n\")\n                        SendMessage(f\"{devices_name}: üî• {ssid}: –û—à–∏–±–∫–∞ 304\")\n                        check_err = 1\n                        err_name = 'Error: 304'\n                    if flag == 1:\n                        print(\"\\033[31m{}\\033[0m\".format(f\"{NowDate()}  –ö–Ω–æ–ø–∫–∞ '–í–æ–π—Ç–∏ –≤ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω \"))\n                        f.write(f\"{NowDate()}  –ö–Ω–æ–ø–∫–∞ '–í–æ–π—Ç–∏ –≤ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω \\n\")\n                        SendMessage(f\"{devices_name}: üî• {ssid}: –ö–Ω–æ–ø–∫–∞ '–í–æ–π—Ç–∏ –≤ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω\")\n                        check_err = 1\n                        err_name = 'Error: Unknown'\n                        # result 0 - —É—Å–ø–µ—à–Ω–æ \\ 1 - –æ—à–∏–±–∫–∞ \\ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \\ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞\n                        # addResult(ssid, devices_name, 1, \"button Connect not found\", f\"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4\")\n                        return False\n                    else:\n                        flag -= 1\n                        sleep(3)\n                        continue\n    \n                # -- –ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º—ã\n                button_x1 = d.xpath(\n                    '//*[@text=\"–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Wi-Fi\"]/android.view.View[2]/android.view.View[1]/android.view.View[3]/android.view.View[1]')\n                button_x2 = d.xpath(\n                    '//*[@text=\"–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Wi-Fi\"]/android.view.View[2]/android.view.View[1]/android.view.View[1]')\n                # button_x2 = d.xpath('//*/android.view.View[1]/android.view.View[2]/android.view.View[1]/android.view.View[1]')\n                button_x3 = d.xpath('//*[@text=\"Wi-Fi.ru\"]/android.view.View[3]/android.view.View[1]')\n    \n                errWebStr = d.xpath('//*[@text=\"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—É\"]')\n                button_continue = d.xpath('//*[@text=\"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å\" or @text=\"–î–∞–ª–µ–µ\"]')\n    \n                # –ù–∞–∑–Ω–∞—á–µ–Ω–∏—è —á–µ–∫–µ—Ä–æ–≤ –¥–ª—è —Å–µ–≥–º–µ–Ω—Ç–æ–≤\n    \n    \n                if 'dit' in ssid or ssid == '_P_ttk_hospitals' or ssid == '_P_dit_almatel':\n                    if ssid == '_P_ttk_hospitals':\n                        final_check = d.xpath('//*[@text=\"mos.ru ‚Äì –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –ú—ç—Ä–∞ –ú–æ—Å–∫–≤—ã\"]')\n                        final_check2 = d.xpath('//*[@text=\"mos.ru ‚Äì –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –ú—ç—Ä–∞ –ú–æ—Å–∫–≤—ã\"]')\n                    elif ssid == '_P_dit_almatel':\n                        final_check = d.xpath('//*[@content-desc=\"–û–¢–ö–†–´–¢–¨ –°–ê–ô–¢ –¢–ï–ê–¢–†–ê\"]')\n                        final_check2 = d.xpath('//*[@content-desc=\"–û–¢–ö–†–´–¢–¨ –°–ê–ô–¢ –¢–ï–ê–¢–†–ê\"]')\n                    else:\n                        final_check = d.xpath('//*[@text=\"mos.ru\"]')\n                        final_check2 = d.xpath('//*[@text=\"mos.ru\"]')\n    \n                elif ssid == '_P_Sola_MT_507':\n                    final_check = d.xpath('//*[@content-desc=\"Logo\"]')\n                    final_check2 = d.xpath('//*[@content-desc=\"Logo\"]')\n                else:\n                    final_check2 = d.xpath('//*[@text=\"Ó†ö\"]')\n                    final_check = d.xpath('//*[@content-desc=\"cabinet.wi-fi\"]')\n    \n                # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è\n                while not (final_check.exists or final_check2.exists or ssid_name.exists):\n                    sleep(5)\n                    if err900.exists:\n                        print(\"\\033[31m{}\\033[0m\".format(f\"{NowDate()} –û—à–∏–±–∫–∞ 900.–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω\"))\n                        f.write(f\"{NowDate()} –û—à–∏–±–∫–∞ 900.–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω\\n\")\n                        SendMessage(f\"{devices_name}: üî• {ssid}: –û—à–∏–±–∫–∞ 900\")\n                        err_name = 'Error: 900'\n                        check_err = 1\n                        # result 0 - —É—Å–ø–µ—à–Ω–æ \\ 1 - –æ—à–∏–±–∫–∞ \\ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \\ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞\n                        # addResult(ssid, devices_name, 1, \"Error900\", f\"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4\")\n                        return False\n                    elif errWebStr.exists:\n                        print(\"\\033[31m{}\\033[0m\".format(f\"{NowDate()} –û—à–∏–±–∫–∞ –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—É ERR_TIMED_OUT.–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω\"))\n                        f.write(f\"{NowDate()} –û—à–∏–±–∫–∞ –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—É ERR_TIMED_OUT.–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω\\n\")\n                        SendMessage(f\"{devices_name}: üî• {ssid}: –û—à–∏–±–∫–∞ –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—É ERR_TIMED_OUT\")\n                        check_err = 1\n                        err_name = 'Error: –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—É ERR_TIMED_OUT'\n                        # result 0 - —É—Å–ø–µ—à–Ω–æ \\ 1 - –æ—à–∏–±–∫–∞ \\ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \\ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞\n                        # addResult(ssid, devices_name, 1, \"err - web page not be opened\",\n                        #          f\"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4\")\n                        return False\n                    elif err100.exists:\n                        print(\"\\033[31m{}\\033[0m\".format(f\"{NowDate()} –û—à–∏–±–∫–∞ 100.–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω\"))\n                        f.write(f\"{NowDate()} –û—à–∏–±–∫–∞ 100.–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω\\n\")\n                        SendMessage(f\"{devices_name}: üî• {ssid}: –û—à–∏–±–∫–∞ 100\")\n                        check_err = 1\n                        err_name = 'Error: 100'\n                        # result 0 - —É—Å–ø–µ—à–Ω–æ \\ 1 - –æ—à–∏–±–∫–∞ \\ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \\ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞\n                        # addResult(ssid, devices_name, 1, \"Error100\", f\"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4\")\n                        return False\n                    elif button_continue.exists:\n                        button_continue.click(1)\n                        print(f\"{NowDate()}  –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å/–î–∞–ª–µ–µ\")\n                        f.write(f\"{NowDate()}  –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å/–î–∞–ª–µ–µ\\n\")\n                        sleep(6)\n                    # elif d.image.match(imTestX):\n                    #     d.image.click(imTestX, timeout=1.0)\n                    #     flag2 -= 1\n                    #     print(f\"{NowDate()}  –ù–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç–∏–∫ –≤–∏–¥ ‚Ññ3\")\n                    #     f.write(f\"{NowDate()}  –ù–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç–∏–∫ –≤–∏–¥ ‚Ññ3\\n\")\n                    #     sleep(6)\n                    elif button_x1.exists:\n                        button_x1.click_exists(5)\n                        flag2 -= 1\n                        print(f\"{NowDate()}  –ù–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç–∏–∫ –≤–∏–¥ ‚Ññ1\")\n                        f.write(f\"{NowDate()}  –ù–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç–∏–∫ –≤–∏–¥ ‚Ññ1\\n\")\n                        sleep(6)\n    \n                    elif button_x2.exists and not button_x3.exists:\n                        if devices_name == \"XiaomiMi9\":\n                            # d.click(954, 500)\n                            button_x2.click_exists(5)\n                            flag2 -= 1\n                        if devices_name == \"XiaomiRedmiNote9\":\n                            d.click(0.940, 0.220)\n                            # button_x2.click_exists(5)\n                            flag2 -= 1\n                        if devices_name == \"Samsung A32\":\n                            # d.click(962, 273)\n                            button_x2.click_exists(5)\n                            flag2 -= 1\n                        print(f\"{NowDate()}  –ù–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç–∏–∫ –≤–∏–¥ ‚Ññ2\")\n                        f.write(f\"{NowDate()}  –ù–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç–∏–∫ –≤–∏–¥ ‚Ññ2\\n\")\n                        sleep(7)\n                    elif button_x2.exists and button_x3.exists:\n                        if devices_name == \"XiaomiMi9\":\n                            # d.click(954, 500)\n                            button_x3.click_exists(5)\n                            flag2 -= 1\n                        if devices_name == \"XiaomiRedmiNote9\":\n                            # d.click(980, 490)\n                            button_x3.click_exists(5)\n                            flag2 -= 1\n                        if devices_name == \"Samsung A32\":\n                            # d.click(962, 273)\n                            button_x3.click_exists(5)\n                            flag2 -= 1\n                        print(f\"{NowDate()}  –ù–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç–∏–∫ –≤–∏–¥ ‚Ññ3\")\n                        f.write(f\"{NowDate()}  –ù–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç–∏–∫ –≤–∏–¥ ‚Ññ3\\n\")\n                        sleep(7)\n                    elif flag2 == 1:\n                        print(\"\\033[31m{}\\033[0m\".format(f\"{NowDate()}  –ò–∫–æ–Ω–∫–∞ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω \"))\n                        f.write(f\"{NowDate()}  –ò–∫–æ–Ω–∫–∞ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω \\n\")\n                        SendMessage(f\"{devices_name}: üî• {ssid}: –ü–æ—Ä—Ç–∞–ª –Ω–µ –ø—Ä–æ–≥—Ä—É–∑–∏–ª—Å—è\")\n                        check_err = 1\n                        err_name = 'Error: –ü–æ—Ä—Ç–∞–ª –Ω–µ –ø—Ä–æ–≥—Ä—É–∑–∏–ª—Å—è'\n                        # result 0 - —É—Å–ø–µ—à–Ω–æ \\ 1 - –æ—à–∏–±–∫–∞ \\ 2 - —Å–µ—Å—Å–∏—è –Ω–µ —É–±–∏—Ç–∞ \\ 3 - –ø–∞–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞\n                        # addResult(ssid, devices_name, 3, \"Portal not found\", f\"{devices_name}_{name_video}_{datetime.now().strftime('%d.%m|%H_%M')}.mp4\")\n                        return False\n                    else:\n                        flag2 -= 1\n                        sleep(5)\n                        continue\n    \n                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∫–æ–Ω–∫–∏ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ\n                if 'dit' in ssid or ssid == '_P_ttk_hospitals' or ssid == '_P_Sola_MT_507':\n                    if final_check.exists:\n                        print(f\"{NowDate()}  –ò–∫–æ–Ω–∫–∞ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ –Ω–∞–π–¥–µ–Ω–∞\")\n                        f.write(f\"{NowDate()}  –ò–∫–æ–Ω–∫–∞ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ –Ω–∞–π–¥–µ–Ω–∞\\n\")\n                    else:\n                        print(\"\\033[31m{}\\033[0m\".format(f\"{NowDate()}  –ò–∫–æ–Ω–∫–∞ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞\"))\n                        f.write(f\"{NowDate()}  –ò–∫–æ–Ω–∫–∞ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞\\n\")\n                else:\n                    if final_check.exists or final_check2.exists:\n                        print(f\"{NowDate()}  –ò–∫–æ–Ω–∫–∞ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ –Ω–∞–π–¥–µ–Ω–∞\")\n                        f.write(f\"{NowDate()}  –ò–∫–æ–Ω–∫–∞ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ –Ω–∞–π–¥–µ–Ω–∞\\n\")\n                    else:\n                        print(\"\\033[31m{}\\033[0m\".format(f\"{NowDate()}  –ò–∫–æ–Ω–∫–∞ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞\"))\n                        f.write(f\"{NowDate()}  –ò–∫–æ–Ω–∫–∞ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞\\n\")\n    \n                # -- –ù–∞ –ø–æ—Ä—Ç–∞–ª–µ\n                if devices_name != 'Samsung A32':\n                    tick = d(resourceId=\"android:id/button2\")\n                    tick.click_exists(10)\n                    print(f\"{NowDate()}  –ù–∞–∂–∞—Ç–∞ –≥–∞–ª–æ—á–∫–∞\")\n                    time_end_avtoriz = time() - time_start_avtoriz\n                    print(f\"–í—Ä–µ–º—è –∑–∞—Ç—Ä–∞—á–µ–Ω–Ω–æ–µ –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é: {round(time_end_avtoriz, 2)} —Å–µ–∫\")\n                    f.write(f\"{NowDate()}  –ù–∞–∂–∞—Ç–∞ –≥–∞–ª–æ—á–∫–∞\\n\")\n                else:\n                    print(f\"{NowDate()}  –ö–µ–ø—Ç–∏–≤ –∑–∞–∫—Ä—ã–ª—Å—è\")\n                    f.write(f\"{NowDate()}  –ö–µ–ø—Ç–∏–≤ –∑–∞–∫—Ä—ã–ª—Å—è\\n\")\n                    time_end_avtoriz = time() - time_start_avtoriz\n                    print(f\"–í—Ä–µ–º—è –∑–∞—Ç—Ä–∞—á–µ–Ω–Ω–æ–µ –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é: {round(time_end_avtoriz, 2)} —Å–µ–∫\")\n    \n                # -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç\n>               if Functions.CheckInternet.CheckInternet(d, devices_name):\n\nTests\\Tests_frame_version.py:498: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nd = <uiautomator2.Device object at 0x000001106A3F6908>, DevicesName = 'XiaomiSE'\n\n    def CheckInternet (d, DevicesName):\n        d.press(\"home\")\n        sleep(2)\n    \n        # t0 = time.time()\n        # d.shell(\"am start -a android.intent.action.VIEW  https://gb.ru/\")\n        # google = d.xpath('//*[@content-desc=\"gb\"]')\n        # google.wait(10)\n        # check1 = google.exists\n        # t1 = time.time() - t0\n        #\n        # sleep(3)\n    \n        t2 = time.time()\n        d.shell(\"am start -a android.intent.action.VIEW  https://vk.com\")\n        sleep(5)\n        button3 = d(resourceId=\"com.android.chrome:id/positive_button\")\n        if button3.exists: d(resourceId=\"com.android.chrome:id/positive_button\").click()\n    \n        lenta = d.xpath('//*[@text=\"–í–æ–π—Ç–∏\"]')\n        lenta.wait(30)\n        check2 = lenta.exists\n        t3 = time.time() - t2\n    \n    \n        sleep(3)\n    \n        if check2:\n            # print(f\"{NowDate()}  gb: {check1} | –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {round(t1,2)} —Å–µ–∫\")\n            print(f\"{NowDate()}  VK.com: {check2} | –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {round(t3,2)} —Å–µ–∫\")\n>           BrowserChromeExit(d)\n\nFunctions\\CheckInternet.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nd = <uiautomator2.Device object at 0x000001106A3F6908>\n\n    def BrowserChromeExit(d):\n        #–ß–∏—Å—Ç–∫–∞ –∫—É–∫–∏\n        but1 = d(resourceId=\"com.android.chrome:id/menu_button_wrapper\")\n        but2 = d(resourceId=\"com.android.chrome:id/menu_item_text\", text=\"–ò—Å—Ç–æ—Ä–∏—è\")\n        but3 = d(resourceId=\"com.android.chrome:id/clear_browsing_data_button\")\n        but4 = d(resourceId=\"com.android.chrome:id/clear_button\")\n        but5 = d(resourceId=\"com.android.chrome:id/close_menu_id\")\n    \n        if but1.exists:\n            but1.click()\n        sleep(1)\n        if but2.exists:\n            but2.click()\n        sleep(1)\n        if but3.exists:\n            but3.click()\n        sleep(1)\n        if but4.exists:\n            but4.click()\n        sleep(1)\n        if but5.exists:\n            but5.click()\n        sleep(1)\n    \n        #–ß–∏—Å—Ç–∫–∞ –≤–∫–ª–∞–¥–æ–∫\n        button01 = d(resourceId=\"com.android.chrome:id/tab_switcher_button\") # [1]\n        button02 = d(resourceId=\"com.android.chrome:id/menu_anchor\") # 3 —Ç–æ—á–∫–∏\n        button03 = d(resourceId=\"com.android.chrome:id/menu_item_text\", text=\"–ó–∞–∫—Ä—ã—Ç—å –≤—Å–µ –≤–∫–ª–∞–¥–∫–∏\") #–∑–∞–∫—Ä—ã—Ç—å –≤—Å–µ –≤–∫–ª–∞–¥–∫–∏ —Å –∫—Ä–µ—Å—Ç–æ–º\n        button04 = d(resourceId=\"com.android.chrome:id/positive_button\") #–ó–∞–∫—Ä—ã—Ç—å –≤—Å–µ –≤–∫–ª–∞–¥–∫–∏ —Å–∏–Ω—è—è\n        if button01.exists:\n            button01.click()\n            sleep(1)\n        if button02.exists:\n            button02.click()\n            sleep(1)\n        if button03.exists:\n            button03.click()\n            sleep(1)\n>       if button04.exists:\n\nFunctions\\Browser.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <[RuntimeError('USB device be11611b is offline') raised in repr()] Exists object at 0x1107824c550>\n\n    def __bool__(self):\n        \"\"\" Magic method for bool(self) python3 \"\"\"\n>       return self.__nonzero__()\n\nvenv\\lib\\site-packages\\uiautomator2\\utils.py:105: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <[RuntimeError('USB device be11611b is offline') raised in repr()] Exists object at 0x1107824c550>\n\n    def __nonzero__(self):\n        \"\"\"Magic method for bool(self) python2 \"\"\"\n>       return self.uiobject.jsonrpc.exist(self.uiobject.selector)\n\nvenv\\lib\\site-packages\\uiautomator2\\utils.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <uiautomator2._BaseClient.jsonrpc.<locals>.JSONRpcWrapper object at 0x0000011079375160>\nargs = ({'mask': 2097152, 'childOrSibling': [], 'childOrSiblingSelector': [], 'resourceId': 'com.android.chrome:id/positive_button'},)\nkwargs = {}, http_timeout = 60\nparams = ({'mask': 2097152, 'childOrSibling': [], 'childOrSiblingSelector': [], 'resourceId': 'com.android.chrome:id/positive_button'},)\n\n    def __call__(self, *args, **kwargs):\n        http_timeout = kwargs.pop('http_timeout', HTTP_TIMEOUT)\n        params = args if args else kwargs\n        return self.server._jsonrpc_retry_call(self.method, params,\n>                                              http_timeout)\n\nvenv\\lib\\site-packages\\uiautomator2\\__init__.py:481: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <uiautomator2.Device object at 0x000001106A3F6908>\nargs = ('exist', ({'mask': 2097152, 'childOrSibling': [], 'childOrSiblingSelector': [], 'resourceId': 'com.android.chrome:id/positive_button'},), 60)\nkwargs = {}\n\n    def _jsonrpc_retry_call(self, *args, **kwargs):\n        try:\n>           return self._jsonrpc_call(*args, **kwargs)\n\nvenv\\lib\\site-packages\\uiautomator2\\__init__.py:487: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <uiautomator2.Device object at 0x000001106A3F6908>, method = 'exist'\nparams = ({'mask': 2097152, 'childOrSibling': [], 'childOrSiblingSelector': [], 'resourceId': 'com.android.chrome:id/positive_button'},)\nhttp_timeout = 60\n\n    def _jsonrpc_call(self, method, params=[], http_timeout=60):\n        \"\"\" jsonrpc2 call\n        Refs:\n            - http://www.jsonrpc.org/specification\n    \n        Raises:\n            Âá∫Áé∞ÁöÑÈîôËØØ‰∏ÄËà¨Êúâ2Â§ßÁ±ª: Ê≠£Â∏∏ÁöÑËØ∑Ê±ÇÈîôËØØ Âíå ÊúçÂä°Á´ØÂºÇÂ∏∏\n            ËøôÈáåÁöÑ‰ª£Á†Å‰∏ªË¶ÅÊòØÂ∞ÜËøô‰∏§Â§ßÁ±ªÈîôËØØÊ≠£Â∏∏ÂΩíÁ±ª\n        \"\"\"\n        request_start = time.time()\n        data = {\n            \"jsonrpc\": \"2.0\",\n            \"id\": self._jsonrpc_id(method),\n            \"method\": method,\n            \"params\": params,\n        }\n        data = json.dumps(data)\n        res = self.http.post(\"/jsonrpc/0\",\n                             headers={\"Content-Type\": \"application/json\"},\n                             data=data,\n>                            timeout=http_timeout)\n\nvenv\\lib\\site-packages\\uiautomator2\\__init__.py:516: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <uiautomator2._AgentRequestSession object at 0x000001107823FF28>\nurl = '/jsonrpc/0'\ndata = '{\"jsonrpc\": \"2.0\", \"id\": \"bbb21b79a4e3d79cbb0dd6717a6552cd\", \"method\": \"exist\", \"params\": [{\"mask\": 2097152, \"childOrSibling\": [], \"childOrSiblingSelector\": [], \"resourceId\": \"com.android.chrome:id/positive_button\"}]}'\njson = None\nkwargs = {'headers': {'Content-Type': 'application/json'}, 'timeout': 60}\n\n    def post(self, url, data=None, json=None, **kwargs):\n        r\"\"\"Sends a POST request. Returns :class:`Response` object.\n    \n        :param url: URL for the new :class:`Request` object.\n        :param data: (optional) Dictionary, list of tuples, bytes, or file-like\n            object to send in the body of the :class:`Request`.\n        :param json: (optional) json to send in the body of the :class:`Request`.\n        :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n        :rtype: requests.Response\n        \"\"\"\n    \n>       return self.request('POST', url, data=data, json=json, **kwargs)\n\nvenv\\lib\\site-packages\\requests\\sessions.py:577: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <uiautomator2._AgentRequestSession object at 0x000001107823FF28>\nmethod = 'POST', url = '/jsonrpc/0'\nkwargs = {'data': '{\"jsonrpc\": \"2.0\", \"id\": \"bbb21b79a4e3d79cbb0dd6717a6552cd\", \"method\": \"exist\", \"params\": [{\"mask\": 2097152,...m.android.chrome:id/positive_button\"}]}', 'headers': {'Content-Type': 'application/json'}, 'json': None, 'timeout': 60}\nretry = True\n\n    def request(self, method, url, **kwargs):\n        \"\"\"\n        Raises:\n            RuntimeError\n        \"\"\"\n        retry = kwargs.pop(\"retry\", True)\n        try:\n            # may raise adbutils.AdbError when device offline\n            url = self.__client.path2url(url)\n            return super().request(method, url, **kwargs)\n        except (requests.ConnectionError, requests.ReadTimeout,\n                adbutils.AdbError) as e:\n            if not retry:\n                raise\n            # if atx-agent is already running, just raise error\n            if isinstance(e, requests.RequestException) and \\\n                    self.__client._is_agent_alive():\n                raise\n    \n    \n        if not self.__client._serial:\n            raise OSError(\n                \"http-request to atx-agent error, can only recover from USB\")\n    \n        logger.warning(\"atx-agent has something wrong, auto recovering\")\n        # ReadTimeout: sometime means atx-agent is running but not responsing\n        # one reason is futex_wait_queue: https://stackoverflow.com/questions/9801256/app-hangs-on-futex-wait-queue-me-every-a-couple-of-minutes\n    \n        # fix atx-agent and request again\n>       self.__client._prepare_atx_agent()\n\nvenv\\lib\\site-packages\\uiautomator2\\__init__.py:223: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <uiautomator2.Device object at 0x000001106A3F6908>\n\n    def _prepare_atx_agent(self):\n        \"\"\"\n        check running -> push binary -> launch\n        \"\"\"\n        assert self._serial, \"Device serialno is required\"\n        _d = self._wait_for_device()\n        if not _d:\n>           raise RuntimeError(\"USB device %s is offline\" % self._serial)\nE           RuntimeError: USB device be11611b is offline\n\nvenv\\lib\\site-packages\\uiautomator2\\__init__.py:321: RuntimeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <Test_MT.TestEOS object at 0x000001107936E518>\n\n    @allure.feature(\"–¢–µ—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏\")\n    @allure.story(\"–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è _P_dit_guest_wifi\")\n    def test_eos_guest (self):\n>       assert AutoTest(number, mac, name, '_P_dit_guest_wifi', 'guest') == True, \"–û—à–∏–±–∫–∞ –≤ —Ö–æ–¥–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è\" \\\n                                                                                  \" —Ç–µ—Å—Ç–∞ _P_dit_guest_wifi\"\n\nTest_MT.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTests\\Tests_frame_version.py:527: in AutoTest\n    d.press(\"home\")\nvenv\\lib\\site-packages\\uiautomator2\\__init__.py:1164: in press\n    return self.jsonrpc.pressKey(key)\nvenv\\lib\\site-packages\\uiautomator2\\__init__.py:481: in __call__\n    http_timeout)\nvenv\\lib\\site-packages\\uiautomator2\\__init__.py:487: in _jsonrpc_retry_call\n    return self._jsonrpc_call(*args, **kwargs)\nvenv\\lib\\site-packages\\uiautomator2\\__init__.py:516: in _jsonrpc_call\n    timeout=http_timeout)\nvenv\\lib\\site-packages\\requests\\sessions.py:577: in post\n    return self.request('POST', url, data=data, json=json, **kwargs)\nvenv\\lib\\site-packages\\uiautomator2\\__init__.py:223: in request\n    self.__client._prepare_atx_agent()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <uiautomator2.Device object at 0x000001106A3F6908>\n\n    def _prepare_atx_agent(self):\n        \"\"\"\n        check running -> push binary -> launch\n        \"\"\"\n        assert self._serial, \"Device serialno is required\"\n        _d = self._wait_for_device()\n        if not _d:\n>           raise RuntimeError(\"USB device %s is offline\" % self._serial)\nE           RuntimeError: USB device be11611b is offline\n\nvenv\\lib\\site-packages\\uiautomator2\\__init__.py:321: RuntimeError"}, "attachments": [{"name": "log", "source": "6fa56b84-215b-4f03-b8c4-6d557f6ddea8-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "efa3046b-d164-48b2-aa79-8b5d4ea4fe2b-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "b346bc0c-97a5-4c0d-8dfa-e3744441e85a-attachment.txt", "type": "text/plain"}], "start": 1651650978078, "stop": 1651651064834, "uuid": "a0029979-4e93-426a-80b9-9bfbb43f45a5", "historyId": "9107ed36be7e4880a2ff9dfb9b79035d", "testCaseId": "6d824c72da181f97caa50844337b058a", "fullName": "Test_MT.TestEOS#test_eos_guest", "labels": [{"name": "feature", "value": "–¢–µ—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"}, {"name": "story", "value": "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è _P_dit_guest_wifi"}, {"name": "suite", "value": "–¢–µ—Å—Ç—ã —Å–µ–≥–º–µ–Ω—Ç–æ–≤ –ï–û–°"}, {"name": "subSuite", "value": "TestEOS"}, {"name": "host", "value": "tester"}, {"name": "thread", "value": "8928-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_MT"}]}